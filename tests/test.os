#Использовать asserts

#Использовать ".."
#Использовать "."


Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("ТестДолжен_ПроверитьТоЧтоОнПроверялРаньше");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьМокКласса");
	ВсеТесты.Добавить("ТестДолжен_Проверить_ТО");

	Возврат ВсеТесты;

КонецФункции

Процедура ПередЗапускомТеста() Экспорт

КонецПроцедуры	


Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры	

Процедура ТестДолжен_Проверить_ТО() Экспорт

	МокТестовыйКласс = Мок.Получить(Новый ТестовыйКласс);
	
	МокТестовыйКласс.Когда().УстановитьКакоеТоЗначение("ПервоеЗначение").То().ПолучитьКакоеТоЗначение().ТогдаВозвращает("ПервоеЗначение");
	МокТестовыйКласс.Когда().УстановитьКакоеТоЗначение("ВтороеЗначение").То().ПолучитьКакоеТоЗначение().ТогдаВозвращает("ВтороеЗначение");
	
	МокТестовыйКласс.УстановитьКакоеТоЗначение("ВтороеЗначение");
	Ожидаем.Что(МокТестовыйКласс.ПолучитьКакоеТоЗначение()).Равно("ВтороеЗначение");

	// Тут падаем т.к. метод ТО фактически не реализован
	МокТестовыйКласс.УстановитьКакоеТоЗначение("ПервоеЗначение");
	Ожидаем.Что(МокТестовыйКласс.ПолучитьКакоеТоЗначение()).Равно("ПервоеЗначение");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьМокКласса() Экспорт

	ТестовыйКласс = Новый ТестовыйКласс;
	ТестовыйКласс.СтроковоеСвойство = "СтроковоеЗначение";

	МокТестовыйКласс = Мок.Получить(ТестовыйКласс);
	МокТестовыйКласс.СтроковоеСвойство = "СтроковоеЗначение";
	Ожидаем.Что(ТестовыйКласс.СтроковоеСвойство).Равно(МокТестовыйКласс.СтроковоеСвойство);

	МокТестовыйКласс.Когда().ПолучитьКакоеТоЗначение().ТогдаВозвращает("Переопределенный ответ");
	Ожидаем.Что(МокТестовыйКласс.ПолучитьКакоеТоЗначение()).Равно("Переопределенный ответ");

	ТестовыйКласс.УстановитьКакоеТоЗначение("НовоеЗначение");
	Ожидаем.Что(ТестовыйКласс.ПолучитьКакоеТоЗначение()).Равно("НовоеЗначение");

КонецПроцедуры	


Процедура ТестДолжен_ПроверитьТоЧтоОнПроверялРаньше() Экспорт

	МокСоединение = Мок.Получить(Новый HTTPСоединение("http://localhost"));
	МокСоединение.ИспользоватьАутентификациюОС = Истина;

	Ожидаем.Что(МокСоединение.ИспользоватьАутентификациюОС).Существует();

	Результат = МокСоединение.Получить(0, 0);
	Ожидаем.Что(Результат).Равно(NULL);

	// Примитивные типы
	МокСоединение.Когда().Получить(0, 0).ТогдаВозвращает(1);
	Результат = МокСоединение.Получить(0, 0);
	Ожидаем.Что(Результат).Равно(1);

	// Сложные типы

	Массив1 = Новый Массив;
	Массив1.Добавить(1);

	МокСоединение.Когда().Получить(Массив1, 0).ТогдаВозвращает(2);

	Массив2 = Новый Массив;
	Массив2.Добавить(1);

	Результат = МокСоединение.Получить(Массив2, 0);
	Ожидаем.Что(Результат).Равно(2);

	МокСоединение.Когда().Получить(Новый HTTPСоединение("http://localhost"), 0).ТогдаВозвращает(3);

	Результат = МокСоединение.Получить(Новый HTTPСоединение("http://localhost"), 0);
	Ожидаем.Что(Результат).Равно(3);

	МокСоединение.ПроверитьЧтоВызывалсяМетод().Получить(Массив2, 0);

	МетодВызывался = Ложь;
	Попытка
		МокСоединение.ПроверитьЧтоВызывалсяМетод().Записать(Неопределено);
		МетодВызывался = Истина;
	Исключение
	КонецПопытки;

	Ожидаем.Что(МетодВызывался, "Ожидали, что метод Записать не вызывался, а мок сказал, что вызывался").ЭтоЛожь();

	Сообщить("");

	МокСтруктура = Мок.Следить(Новый Структура);

	МокСтруктура.Вставить("Ключ1", 1);

	Ожидаем.Что(МокСтруктура.Количество()).Равно(1);

	МокСтруктура.Вставить("Ключ2", 2);
	МокСтруктура.Когда().Количество().ТогдаВозвращает(999);

	Ожидаем.Что(МокСтруктура.Количество()).Равно(999);

КонецПроцедуры